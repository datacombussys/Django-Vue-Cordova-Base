# Generated by Django 2.1.12 on 2019-11-12 23:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('ia_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, max_length=50)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('mobile_phone', models.IntegerField(blank=True, null=True)),
                ('street_name', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('zip', models.IntegerField(blank=True, null=True)),
                ('bio', models.TextField(blank=True)),
                ('global_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('rating', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommonGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('is_employee', models.BooleanField(default=False)),
                ('is_datacom', models.BooleanField(default=False)),
                ('is_partner', models.BooleanField(default=False)),
                ('is_MerchantAdmin', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_vendor', models.BooleanField(default=False)),
            ],
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dba_name', models.CharField(max_length=20)),
                ('legal_name', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('global_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('website', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='usernames', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='merchant',
            field=models.ManyToManyField(blank=True, related_name='dba_names', to='users.Company'),
        ),
    ]
